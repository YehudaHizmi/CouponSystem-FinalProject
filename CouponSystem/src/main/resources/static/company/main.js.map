{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/common/Company.ts","webpack:///./src/app/components/common/Coupon.ts","webpack:///./src/app/components/common/dialog-container/dialog-container.component.css","webpack:///./src/app/components/common/dialog-container/dialog-container.component.html","webpack:///./src/app/components/common/dialog-container/dialog-container.component.ts","webpack:///./src/app/components/company-main-area/company-main-area.component.css","webpack:///./src/app/components/company-main-area/company-main-area.component.html","webpack:///./src/app/components/company-main-area/company-main-area.component.ts","webpack:///./src/app/components/create-coupon/create-coupon.component.css","webpack:///./src/app/components/create-coupon/create-coupon.component.html","webpack:///./src/app/components/create-coupon/create-coupon.component.ts","webpack:///./src/app/components/get-company-info/get-company-info.component.css","webpack:///./src/app/components/get-company-info/get-company-info.component.html","webpack:///./src/app/components/get-company-info/get-company-info.component.ts","webpack:///./src/app/components/get-coupon-by-id/get-coupon-by-id.component.css","webpack:///./src/app/components/get-coupon-by-id/get-coupon-by-id.component.html","webpack:///./src/app/components/get-coupon-by-id/get-coupon-by-id.component.ts","webpack:///./src/app/components/get-coupons-by-date/get-coupons-by-date.component.css","webpack:///./src/app/components/get-coupons-by-date/get-coupons-by-date.component.html","webpack:///./src/app/components/get-coupons-by-date/get-coupons-by-date.component.ts","webpack:///./src/app/components/get-coupons-by-price/get-coupons-by-price.component.css","webpack:///./src/app/components/get-coupons-by-price/get-coupons-by-price.component.html","webpack:///./src/app/components/get-coupons-by-price/get-coupons-by-price.component.ts","webpack:///./src/app/components/get-coupons-by-type/get-coupons-by-type.component.css","webpack:///./src/app/components/get-coupons-by-type/get-coupons-by-type.component.html","webpack:///./src/app/components/get-coupons-by-type/get-coupons-by-type.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/services/web-api-company.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"outer-outlet {\\r\\n  margin-top: 1000px;\\r\\n}\\r\\n\"","module.exports = \"<p-toast position=\\\"top-right\\\" [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\n<app-header></app-header>\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n <router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CouponSystemCompany';\n}\n","import { WebApiCompanyService } from './services/web-api-company.service';\nimport { BrowserModule, } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { CompanyMainAreaComponent } from './components/company-main-area/company-main-area.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MenuModule } from 'primeng/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CreateCouponComponent } from './components/create-coupon/create-coupon.component';\nimport { RouterModule } from '@angular/router';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CalendarModule } from 'primeng/calendar';\nimport { HttpModule } from '@angular/http';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { TableModule } from 'primeng/table';\nimport { DialogModule } from 'primeng/dialog';\nimport { MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogContainerComponent } from './components/common/dialog-container/dialog-container.component';\nimport { GetCouponByIdComponent } from './components/get-coupon-by-id/get-coupon-by-id.component';\nimport { GetCompanyInfoComponent } from './components/get-company-info/get-company-info.component';\nimport { GetCouponsByPriceComponent } from './components/get-coupons-by-price/get-coupons-by-price.component';\n\nimport { SliderModule } from 'primeng/slider';\nimport { GetCouponsByDateComponent } from './components/get-coupons-by-date/get-coupons-by-date.component';\nimport { GetCouponsByTypeComponent } from './components/get-coupons-by-type/get-coupons-by-type.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompanyMainAreaComponent,\n    HeaderComponent,\n    CreateCouponComponent,\n    DialogContainerComponent,\n    GetCouponByIdComponent,\n    GetCompanyInfoComponent,\n    GetCouponsByPriceComponent,\n    GetCouponsByDateComponent,\n    GetCouponsByTypeComponent\n  ],\n  imports: [\n    BrowserModule,\n    MenuModule,\n    BrowserAnimationsModule,\n    FieldsetModule,\n    InputTextModule,\n    FormsModule,\n    CalendarModule,\n    ReactiveFormsModule,\n    HttpModule,\n    DropdownModule,\n    TableModule,\n    DialogModule,\n    ToastModule,\n    SliderModule,\n    RouterModule.forRoot(\n      [\n        {\n          path: 'allCoupons',\n          component: CompanyMainAreaComponent\n        },\n        {\n            path: 'addCoupon',\n            component: CreateCouponComponent\n        },\n        {\n          path: 'getCoupon',\n          component: GetCouponByIdComponent\n        },\n        {\n          path: 'companyInfo',\n          component: GetCompanyInfoComponent\n        },\n        {\n          path: 'getCouponsByPrice',\n          component: GetCouponsByPriceComponent\n        },\n        {\n          path: 'getCouponsByDate',\n          component: GetCouponsByDateComponent\n        },\n        {\n          path: 'getCouponsByType',\n          component: GetCouponsByTypeComponent\n        },\n        {\n          path: '',\n          redirectTo: '/allCoupons',\n          pathMatch: 'full'\n      },\n      ]\n    )\n  ],\n  providers: [ WebApiCompanyService, MessageService, { provide: LocationStrategy, useClass: HashLocationStrategy } ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Coupon } from './Coupon';\r\n\r\nexport class Company {\r\n\r\n  constructor(public id: number, public compName: string, public email: string, public password: string, public coupons?: Coupon[]) {}\r\n\r\n}\r\n","export class Coupon {\r\n\r\n  constructor(public id: number, public title: string, public startDate?: Date, public endDate?: Date,\r\n              public amount?: number, public type?: string, public message?: string, public price?: number, public image?: string\r\n              ) {}\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  dialog-container works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-container',\n  templateUrl: './dialog-container.component.html',\n  styleUrls: ['./dialog-container.component.css']\n})\nexport class DialogContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".componentsInputs {\\r\\n  width: 470px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div *ngIf=\\\"hasData!==true\\\">\\n        <div class=\\\"alert alert-info\\\" style=\\\"text-align: center\\\">\\n            <strong>There aren't any coupons in the system</strong>\\n          </div>\\n    </div>\\n  <p-fieldset [legend]=\\\"caption\\\">\\n   <p-table  [columns]=\\\"cols\\\" [value]=\\\"coupons\\\" selectionMode=\\\"single\\\" [paginator]=\\\"true\\\" [(selection)]=\\\"selectedCoupon\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n   [rows]=\\\"10\\\" [resizableColumns]=\\\"true\\\">\\n    <ng-template pTemplate=\\\"caption\\\">\\n        {{ numOfCoupons }} Listed Coupons\\n      </ng-template>\\n    <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n            <th *ngFor=\\\"let col of cols\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn>\\n            {{ col.displayName }}\\n            <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\n            </th>\\n        </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n        <tr [pSelectableRow]=\\\"rowData\\\">\\n            <td *ngFor=\\\"let col of columns\\\">\\n                <span *ngIf=\\\"col.field!=='startDate' && col.field!=='endDate'\\\" >{{rowData[col.field]}}</span>\\n                <span *ngIf=\\\"col.field==='startDate' || col.field==='endDate'\\\" >{{rowData[col.field]|date:'dd/MM/yyyy'}}</span>\\n            </td>\\n        </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"summary\\\" let-rowData>\\n        <div style=\\\"text-align:left\\\">\\n            <button pButton class=\\\"ui-button-rounded\\\" type=\\\"button\\\"  icon=\\\"pi pi-plus\\\" (click)=\\\"showDialogToAdd()\\\" label=\\\"Add\\\"></button>\\n        </div>\\n    </ng-template>\\n  </p-table>\\n  <span>*For update/delete a record please select a row</span>\\n  </p-fieldset>\\n  </div>\\n\\n <p-dialog header=\\\"Coupon Details\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [width]=\\\"500\\\"\\n  [dismissableMask]=\\\"true\\\">\\n   <br>\\n   <form [formGroup]=\\\"createCouponDialogForm\\\">\\n      <div class=\\\"form-group\\\" style=\\\"text-align:center\\\" *ngIf=\\\"!newCoupon\\\">\\n          <img id=\\\"img\\\" [src]=\\\"coupon.image\\\" width=\\\"90\\\" height=\\\"90\\\">\\n          <hr style=\\\"border-top-width: 3px\\\">\\n    </div>\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['title'].invalid && createCouponDialogForm.controls['title'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls[cols[1].field].valid && createCouponDialogForm.controls['title'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <input id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\" name=\\\"title\\\" [(ngModel)]=\\\"coupon.title\\\"\\n       pInputText>\\n      <label for=\\\"title\\\" class=\\\"control-label\\\">Title</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['title'].invalid && createCouponDialogForm.controls['title'].touched\\\">\\n      Title Is Required</span>\\n  </div><br>\\n\\n  <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['startDate'].invalid && createCouponDialogForm.controls['startDate'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls['startDate'].valid && createCouponDialogForm.controls['startDate'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <p-calendar id=\\\"startDate\\\" formControlName=\\\"startDate\\\" inputStyleClass=\\\"form-control\\\" name=\\\"startDate\\\"  [(ngModel)]=\\\"coupon.startDate\\\"\\n      [style]=\\\"{'width':'470px'}\\\"\\n      ></p-calendar>\\n      <label for=\\\"startDate\\\">Start Date</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['startDate'].invalid && createCouponDialogForm.controls['startDate'].touched\\\">\\n      <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.get('startDate').errors['DateMustBeGreaterThanSysdate']\\\">\\n          Satrt Date Must Be Equal/Greater than Today\\n      </span>\\n      <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.get('startDate').errors['StartDateMustBeLessThanEndDate']\\\">\\n          Satrt Date Must Be Equal/Less than End Date\\n      </span>\\n      <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.get('startDate').errors['required']\\\">\\n          Start Date Is Required\\n      </span>\\n  </span>\\n    <!-- <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['startDate'].invalid && createCouponDialogForm.controls['startDate'].touched\\\">\\n      Start Date Is Required</span> -->\\n  </div><br>\\n\\n  <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['endDate'].invalid && createCouponDialogForm.controls['endDate'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls['endDate'].valid && createCouponDialogForm.controls['endDate'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <p-calendar  id=\\\"endDate\\\" formControlName=\\\"endDate\\\" inputStyleClass=\\\"form-control\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"coupon.endDate\\\"\\n      [style]=\\\"{'width':'470px'}\\\"\\n      ></p-calendar>\\n      <label for=\\\"endDate\\\">End Date</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['endDate'].invalid && createCouponDialogForm.controls['endDate'].touched\\\">\\n      <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.get('endDate').errors['DateMustBeGreaterThanSysdate']\\\">\\n          End Date Must Be Equal/Greater than Today\\n      </span>\\n      <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.get('endDate').errors['EndDateMustBeGreaterThanStartDate']\\\">\\n          End Date Must Be Equal/Greater than Start Date\\n      </span>\\n      <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.get('endDate').errors['required']\\\">\\n              End Date Is Required\\n      </span>\\n  </span>\\n    <!-- <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['endDate'].invalid && createCouponDialogForm.controls['endDate'].touched\\\">\\n      End Date Is Required</span> -->\\n  </div><br>\\n\\n  <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['amount'].invalid && createCouponDialogForm.controls['amount'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls['amount'].valid && createCouponDialogForm.controls['amount'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <input  id=\\\"amount\\\" type=\\\"number\\\" formControlName=\\\"amount\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [(ngModel)]=\\\"coupon.amount\\\"\\n       pInputText>\\n      <label for=\\\"amount\\\" class=\\\"control-label\\\" >Amount</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['amount'].invalid && createCouponDialogForm.controls['amount'].touched\\\">\\n      Amount Is Required</span>\\n  </div><br>\\n\\n  <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['type'].invalid && createCouponDialogForm.controls['type'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls['type'].valid && createCouponDialogForm.controls['type'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <p-dropdown id=\\\"type\\\" [options]=\\\"types\\\" name=\\\"type\\\" inputStyleClass=\\\"form-control\\\" [autoDisplayFirst]=\\\"false\\\"\\n        [showClear]=\\\"true\\\" formControlName=\\\"type\\\" [(ngModel)]=\\\"coupon.type\\\" [style]=\\\"{'width':'470px'}\\\">\\n      </p-dropdown>\\n      <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['type'].invalid && createCouponDialogForm.controls['type'].touched\\\">\\n      Type Is Required</span>\\n  </div><br>\\n\\n  <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['message'].invalid && createCouponDialogForm.controls['message'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls['message'].valid && createCouponDialogForm.controls['message'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <input id=\\\"message\\\" type=\\\"text\\\" formControlName=\\\"message\\\" class=\\\"form-control\\\" name=\\\"message\\\" [(ngModel)]=\\\"coupon.message\\\"\\n       pInputText>\\n      <label for=\\\"message\\\" class=\\\"control-label\\\">Message</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['message'].invalid && createCouponDialogForm.controls['message'].touched\\\">\\n      Message Is Required</span>\\n  </div><br>\\n\\n  <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['price'].invalid && createCouponDialogForm.controls['price'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls['price'].valid && createCouponDialogForm.controls['price'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <input id=\\\"price\\\" type=\\\"price\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\" name=\\\"price\\\" [(ngModel)]=\\\"coupon.price\\\"\\n       pInputText>\\n      <label for=\\\"price\\\" class=\\\"control-label\\\">Price</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['price'].invalid && createCouponDialogForm.controls['price'].touched\\\">Price\\n      Is Required</span>\\n  </div><br>\\n\\n  <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponDialogForm.controls['image'].invalid && createCouponDialogForm.controls['image'].touched\\\"\\n    [class.has-success]=\\\"createCouponDialogForm.controls['image'].valid && createCouponDialogForm.controls['image'].touched\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <input id=\\\"image\\\" type=\\\"text\\\" formControlName=\\\"image\\\" class=\\\"form-control\\\" name=\\\"image\\\" [(ngModel)]=\\\"coupon.image\\\"\\n       pInputText>\\n      <label for=\\\"image\\\" class=\\\"control-label\\\">Image</label>\\n    </span>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"createCouponDialogForm.controls['image'].invalid && createCouponDialogForm.controls['image'].touched\\\">\\n      Image Is Required</span>\\n  </div><br>\\n  <p-footer>\\n      <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix ui-button-icon-left\\\">\\n          <button  type=\\\"button\\\" pButton class=\\\"ui-button-rounded ui-button-danger\\\" icon=\\\"pi pi-times\\\" (click)=\\\"delete()\\\" [label]=\\\"DialogLeftButton\\\"></button>\\n          &nbsp;\\n          <button type=\\\"button\\\" [disabled]=\\\"!createCouponDialogForm.valid\\\" pButton  class=\\\"ui-button-rounded ui-button-success\\\" icon=\\\"pi pi-save\\\" (click)=\\\"save()\\\" [label]=\\\"DialogRightButton\\\"></button>\\n      </div>\\n  </p-footer>\\n</form>\\n\\n  </p-dialog>\\n\\n\"","import { MessageService, SelectItem } from 'primeng/api';\nimport { WebApiCompanyService } from './../../services/web-api-company.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Coupon } from '../common/Coupon';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-company-main-area',\n  templateUrl: './company-main-area.component.html',\n  styleUrls: ['./company-main-area.component.css']\n})\nexport class CompanyMainAreaComponent implements OnInit {\n\n  coupons: Coupon[] = [];\n  cols: any[];\n  caption = 'Company Main Management Area';\n  coupon: Coupon = new Coupon(null, '', null, null, null, '', '', null, '');\n  newCoupon: boolean;\n  displayDialog: boolean;\n  selectedCoupon: Coupon;\n  couponTitle: string;\n  numOfCoupons: number;\n  DialogLeftButton = 'Delete';\n  DialogRightButton = 'Update';\n  types: SelectItem[];\n  createCouponDialogForm: FormGroup;\n  date = new Date();\n  hasData = false;\n\n\n  /*\n  At the constructor we inject\n  1. FormBuilder for the favor validation of the forms\n  2. WebApiAdminService for the favor of the services\n  3. MessageService for the favor of the custom messages\n  */\n  constructor(private formBuilder: FormBuilder, private companyService: WebApiCompanyService, private messageService: MessageService ) {\n\n    // this.hasData = companyService.hasData;\n    this.cols = companyService.couponCols;\n    this.types = companyService.couponTypes;\n\n    // This date is reset to contains only date without time in order to compare dates based on day and not day and time\n    this.date.setSeconds(0);\n    this.date.setHours(0);\n    this.date.setMinutes(0);\n    this.date.setMilliseconds(0);\n\n    // In the code we define the validation for each input.\n    // For the dates there are three addtioanl validations (the methods are defined at the end of this file)\n    this.createCouponDialogForm = formBuilder.group ({\n      'title': [null, Validators.compose( [Validators.required])],\n      'startDate': [null, Validators.compose( [Validators.required, this.checkDate.bind(this), this.checkStartDate.bind(this)])],\n      'endDate': [null, Validators.compose( [Validators.required, this.checkDate.bind(this), this.checkEndDate.bind(this)])],\n      'amount': [null, Validators.compose( [Validators.required])],\n      'type': [null, Validators.compose( [Validators.required])],\n      'message': [null, Validators.compose( [Validators.required])],\n      'price': [null, Validators.compose( [Validators.required])],\n      'image': [null, Validators.compose( [Validators.required])]\n   });\n\n    this.getAllCoupons();\n   }\n\n  ngOnInit() {\n  }\n\n  // When this method is activated a pop up window is opening and a new coupon can be added\n  showDialogToAdd() {\n    this.newCoupon = true;\n    this.coupon = new Coupon(null, '', null, null, null, '', '', null, '');\n    this.displayDialog = true;\n    this.createCouponDialogForm.reset();\n    this.disabledInputs('Add');\n    this.DialogLeftButton = 'Cancel';\n    this.DialogRightButton = 'Save';\n\n  }\n\n  // When this method is activated a pop up window is opening and a new coupon can be edited\n  onRowSelect(event) {\n    this.newCoupon = false;\n    // this.createCouponDialogForm.reset();\n    this.coupon = this.cloneCoupon(event.data);\n    this.displayDialog = true;\n    this.disabledInputs('Update');\n    this.DialogLeftButton = 'Delete';\n    this.DialogRightButton = 'Update';\n  }\n\n\n  // This method is activated from onRowSelect in order to present the edited coupon\n  cloneCoupon(coupon: Coupon): Coupon {\n    const tempCoupon = new Coupon(null, '', null, null, null, '', '', null, '');\n    // tslint:disable-next-line:forin\n    for (const prop in coupon) {\n      if (prop === 'startDate' || prop === 'endDate') {\n        tempCoupon[prop] = new Date(coupon[prop]);\n      } else {\n        tempCoupon[prop] = coupon[prop];\n      }\n    }\n    // console.log(tempCoupon);\n    return tempCoupon;\n  }\n\n  // This method responsible for enabling and disabling editable inputs\n  private disabledInputs(source: string) {\n    this.createCouponDialogForm.disable();\n    this.createCouponDialogForm.get('endDate').enable();\n    this.createCouponDialogForm.get('price').enable();\n    // this.createCouponDialogForm.get('title').disable();\n    // this.createCouponDialogForm.get('startDate').disable();\n    // this.createCouponDialogForm.get('endDate').enable();\n    // this.createCouponDialogForm.get('amount').disable();\n    // this.createCouponDialogForm.get('type').disable();\n    // this.createCouponDialogForm.get('message').disable();\n    // this.createCouponDialogForm.get('price').enable();\n    // this.createCouponDialogForm.get('image').disable();\n    if (source === 'Add') {\n      this.createCouponDialogForm.enable();\n      // this.createCouponDialogForm.get('title').disable();\n      // this.createCouponDialogForm.get('startDate').disable();\n      // this.createCouponDialogForm.get('amount').disable();\n      // this.createCouponDialogForm.get('type').disable();\n      // this.createCouponDialogForm.get('message').disable();\n      // this.createCouponDialogForm.get('image').disable();\n\n    }\n\n  }\n\n  /* This method responsible to save the data in two cases:\n     1. When a new coupon being added the addNewCouponService service is activated\n     2. When an existing coupon being edited than the updateCouponService service is activated\n  */\n  save() {\n    this.couponTitle = this.coupon.title;\n    if (this.newCoupon) { // Add new company to DB\n      this.companyService.addNewCouponService(this.coupon).subscribe(\n        (resp) => {\n          this.getAllCoupons();\n          this.messageService.add({severity: 'success', summary: 'Coupon Was Added', detail: this.couponTitle +\n          ' Was Added Successfully'});\n        },\n        (error) => {\n          this.messageService.add({severity: 'error', summary: 'Coupon Was\\'t Added', detail: error._body});\n        });\n    } else { // Update the company\n      this.companyService.updateCouponService(this.coupon).subscribe(\n        () => {\n          this.getAllCoupons();\n          this.messageService.add({severity: 'success', summary: 'Coupon Was Updated', detail: this.couponTitle +\n          ' Was Updated Successfully'});\n        },\n        (error) => {\n          this.messageService.add({severity: 'error', summary: 'Coupon Was\\'t Updated', detail: error._body});\n        });\n    }\n    // this.coupon = null;\n    this.displayDialog = false;\n\n  }\n\n   // When a coupon is deleted than this method is activated and it activate the deleteCouponService service\n   delete() {\n    this.couponTitle = this.coupon.title;\n    if (!this.newCoupon) {\n    this.companyService.deleteCouponService(this.selectedCoupon).subscribe(\n         () => {\n           this.getAllCoupons();\n            this.messageService.add({severity: 'success', summary: 'Coupon Was Deleted', detail: this.couponTitle +\n            ' Was Deleted Successfully'});\n        },\n        (error) => {\n          this.messageService.add({severity: 'error', summary: 'Customer Was\\'t Deleted', detail: error._body});\n        });\n     }\n     // this.coupon = null;\n     // this.createCouponDialogForm.reset();\n     this.displayDialog = false;\n   }\n\n  // This method is activated from the constructor - in order to intialize the data for the first time\n  getAllCoupons() {\n    this.companyService.getAllCouponsService().subscribe(\n      (resp) => {\n        this.hasData = true;\n        this.coupons = resp.json();\n        this.numOfCoupons = this.coupons.length;\n        // Make default sort of companies array\n        this.sortArry(this.coupons);\n    },\n    (error) => {\n      if (this.hasData) {\n        this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: error._body});\n      }\n    });\n  }\n\n  // This function responsible to sort the array accoring to the title of the coupon\n  private sortArry(arryToSort: Coupon[]) {\n    arryToSort.sort((a: any, b: any) => {\n      if (a.title < b.title) {\n        return -1;\n      } else if (a.title > b.title) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  /* The following 3 methods responsible for the dates validations\n    1. checkDate - checks if the date selected is greated than today\n    2. checkStartDate - checks if the start date is less than the end date\n    3. checkEndDate - checks if the end date is greater than start date\n  */\n  private checkDate(control: FormControl): { [s: string]: boolean} {\n    if ( control.value !== null && control.value < this.date) {\n      return {'DateMustBeGreaterThanSysdate': true};\n    }\n    return null;\n  }\n\n  private checkStartDate(control: FormControl): { [s: string]: boolean} {\n    if ( this.coupon.endDate !== null && control.value > this.coupon.endDate) {\n      return {'StartDateMustBeLessThanEndDate': true};\n    }\n    // this.newCoupon.startDate = this.newCoupon.startDate;\n    return null;\n  }\n\n  private checkEndDate(control: FormControl): { [s: string]: boolean} {\n    if ( this.coupon.startDate !== null && control.value < this.coupon.startDate) {\n      return {'EndDateMustBeGreaterThanStartDate': true};\n    }\n    // this.newCoupon.endDate = this.newCoupon.endDate;\n    return null;\n  }\n\n\n}\n","module.exports = \"\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <p-fieldset [legend]=\\\"caption\\\">\\n    <form [formGroup]=\\\"createCouponForm\\\">\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['title'].invalid && createCouponForm.controls['title'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['title'].valid && createCouponForm.controls['title'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <input required id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\" name=\\\"title\\\" [(ngModel)]=\\\"newCoupon.title\\\" pInputText>\\n          <label for=\\\"title\\\" class=\\\"control-label\\\">Title</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['title'].invalid && createCouponForm.controls['title'].touched\\\">\\n          Title Is Required</span>\\n      </div><br>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['startDate'].invalid && createCouponForm.controls['startDate'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['startDate'].valid && createCouponForm.controls['startDate'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <p-calendar [required]=\\\"true\\\" id=\\\"startDate\\\" formControlName=\\\"startDate\\\" inputStyleClass=\\\"form-control\\\" name=\\\"startDate\\\"  [(ngModel)]=\\\"newCoupon.startDate\\\"\\n          [style]=\\\"{'width':'100%'}\\\"></p-calendar>\\n          <label for=\\\"startDate\\\">Start Date</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['startDate'].invalid && createCouponForm.controls['startDate'].touched\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.get('startDate').errors['DateMustBeGreaterThanSysdate']\\\">\\n                Satrt Date Must Be Equal/Greater than Today\\n            </span>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.get('startDate').errors['StartDateMustBeLessThanEndDate']\\\">\\n                Satrt Date Must Be Equal/Less than End Date\\n            </span>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.get('startDate').errors['required']\\\">\\n                Start Date Is Required\\n            </span>\\n        </span>\\n      </div><br>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['endDate'].invalid && createCouponForm.controls['endDate'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['endDate'].valid && createCouponForm.controls['endDate'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <p-calendar [required]=\\\"true\\\" id=\\\"endDate\\\" formControlName=\\\"endDate\\\" inputStyleClass=\\\"form-control\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"newCoupon.endDate\\\"\\n          [style]=\\\"{'width':'100%'}\\\"></p-calendar>\\n          <label for=\\\"endDate\\\">End Date</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['endDate'].invalid && createCouponForm.controls['endDate'].touched\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.get('endDate').errors['DateMustBeGreaterThanSysdate']\\\">\\n                End Date Must Be Equal/Greater than Today\\n            </span>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.get('endDate').errors['EndDateMustBeGreaterThanStartDate']\\\">\\n                End Date Must Be Equal/Greater than Start Date\\n            </span>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.get('endDate').errors['required']\\\">\\n                    End Date Is Required\\n            </span>\\n        </span>\\n      </div><br>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['amount'].invalid && createCouponForm.controls['amount'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['amount'].valid && createCouponForm.controls['amount'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <input required id=\\\"amount\\\" type=\\\"number\\\" formControlName=\\\"amount\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [(ngModel)]=\\\"newCoupon.amount\\\" pInputText>\\n          <label for=\\\"amount\\\" class=\\\"control-label\\\">Amount</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['amount'].invalid && createCouponForm.controls['amount'].touched\\\">\\n          Amount Is Required</span>\\n      </div><br>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['type'].invalid && createCouponForm.controls['type'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['type'].valid && createCouponForm.controls['type'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <p-dropdown id=\\\"type\\\" [options]=\\\"types\\\" name=\\\"type\\\" inputStyleClass=\\\"form-control\\\" [autoDisplayFirst]=\\\"false\\\"\\n            [showClear]=\\\"true\\\" formControlName=\\\"type\\\" [(ngModel)]=\\\"newCoupon.type\\\" [style]=\\\"{'width':'100%'}\\\">\\n          </p-dropdown>\\n          <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['type'].invalid && createCouponForm.controls['type'].touched\\\">\\n          Type Is Required</span>\\n      </div><br>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['message'].invalid && createCouponForm.controls['message'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['message'].valid && createCouponForm.controls['message'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <input required id=\\\"message\\\" type=\\\"text\\\" formControlName=\\\"message\\\" class=\\\"form-control\\\" name=\\\"message\\\" [(ngModel)]=\\\"newCoupon.message\\\" pInputText>\\n          <label for=\\\"message\\\" class=\\\"control-label\\\">Message</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['message'].invalid && createCouponForm.controls['message'].touched\\\">\\n          Message Is Required</span>\\n      </div><br>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['price'].invalid && createCouponForm.controls['price'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['price'].valid && createCouponForm.controls['price'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <input required id=\\\"price\\\" type=\\\"price\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\" name=\\\"price\\\" [(ngModel)]=\\\"newCoupon.price\\\" pInputText>\\n          <label for=\\\"price\\\" class=\\\"control-label\\\">Price</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['price'].invalid && createCouponForm.controls['price'].touched\\\">Price\\n          Is Required</span>\\n      </div><br>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"createCouponForm.controls['image'].invalid && createCouponForm.controls['image'].touched\\\"\\n        [class.has-success]=\\\"createCouponForm.controls['image'].valid && createCouponForm.controls['image'].touched\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <input required id=\\\"image\\\" type=\\\"text\\\" formControlName=\\\"image\\\" class=\\\"form-control\\\" name=\\\"image\\\" [(ngModel)]=\\\"newCoupon.image\\\" pInputText>\\n          <label for=\\\"image\\\" class=\\\"control-label\\\">Image</label>\\n        </span>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"createCouponForm.controls['image'].invalid && createCouponForm.controls['image'].touched\\\">\\n          Image Is Required</span>\\n      </div><br>\\n\\n      <button pButton [disabled]=\\\"!createCouponForm.valid\\\"  type=\\\"submit\\\" class=\\\"ui-button-rounded\\\" label=\\\"Add Coupon\\\" (click)=\\\"addNewCoupon(); createCouponForm.reset()\\\"></button>\\n    </form>\\n  </p-fieldset>\\n</div>\\n\"","import { WebApiCompanyService } from './../../services/web-api-company.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Coupon } from '../common/Coupon';\nimport { MessageService, SelectItem } from 'primeng/api';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-coupon',\n  templateUrl: './create-coupon.component.html',\n  styleUrls: ['./create-coupon.component.css']\n})\nexport class CreateCouponComponent implements OnInit {\n\n  newCoupon: Coupon = new Coupon(null, '', null, null, null, '', '', null, '');\n  caption = 'Create A New Coupon';\n  createCouponForm: FormGroup;\n  date = new Date();\n  types: SelectItem[];\n  couponTitle: string;\n\n  /*\n  At the constructor we inject\n  1. FormBuilder for the favor validation of the forms\n  2. WebApiAdminService for the favor of the services\n  3. MessageService for the favor of the custom messages\n  */\n  constructor(private formBuilder: FormBuilder,  private companyService: WebApiCompanyService, private messageService: MessageService) {\n\n    // This date is reset to contains only date without time in order to compare dates based on day and not day and time\n    this.date.setSeconds(0);\n    this.date.setHours(0);\n    this.date.setMinutes(0);\n    this.date.setMilliseconds(0);\n\n    // initialize the coupon types for the favor of the drop down list\n    this.types = [\n      {label: 'Resturant' , value: 'RESTURANT'},\n      {label: 'Electricity', value: 'ELECTRICITY'},\n      {label: 'Food', value: 'FOOD'},\n      {label: 'Health', value: 'HEALTH'},\n      {label: 'Sports', value: 'SPORTS'},\n      {label: 'Camping', value: 'CAMPING'},\n      {label: 'Travelling', value: 'TRAVELLING'},\n    ];\n\n\n    // In the code we define the validation for each input.\n    // For the dates there are three addtioanl validations (the methods are defined at the end of this file)\n    this.createCouponForm = formBuilder.group ({\n       'title': [null, Validators.compose( [Validators.required])],\n       'startDate': [null, Validators.compose( [Validators.required, this.checkDate.bind(this), this.checkStartDate.bind(this)])],\n       'endDate': [null, Validators.compose( [Validators.required, this.checkDate.bind(this), this.checkEndDate.bind(this)])],\n       'amount': [null, Validators.compose( [Validators.required])],\n       'type': [null, Validators.compose( [Validators.required])],\n       'message': [null, Validators.compose( [Validators.required])],\n       'price': [null, Validators.compose( [Validators.required])],\n       'image': [null, Validators.compose( [Validators.required])]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  // This method is activated afte the user finished to enter all the coupon infromation into the form and activate the save button.\n  // It activates the addNewCouponService service.\n  public addNewCoupon() {\n    console.log(this.newCoupon);\n    this.couponTitle = this.newCoupon.title;\n    this.companyService.addNewCouponService(this.newCoupon).subscribe\n    (\n      (resp) => {\n        this.messageService.add({severity: 'success', summary: 'Company Was Added', detail: this.couponTitle +\n         ' Was Added Successfully'});\n      },\n      (error) => {\n         this.messageService.add({severity: 'error', summary: 'Company Was\\'t Added', detail: error._body});\n      }\n    );\n    this.newCoupon = new Coupon(null, '', null, null, null, '', '', null, '');\n  }\n\n\n  /* The following 3 methods responsible for the dates validations\n    1. checkDate - checks if the date selected is greated than today\n    2. checkStartDate - checks if the start date is less than the end date\n    3. checkEndDate - checks if the end date is greater than start date\n  */\n  checkDate(control: FormControl): { [s: string]: boolean} {\n    if ( control.value !== null && control.value < this.date) {\n      return {'DateMustBeGreaterThanSysdate': true};\n    }\n    return null;\n  }\n\n  checkStartDate(control: FormControl): { [s: string]: boolean} {\n    if ( this.newCoupon.endDate !== null && control.value > this.newCoupon.endDate) {\n      return {'StartDateMustBeLessThanEndDate': true};\n    }\n    // this.newCoupon.startDate = this.newCoupon.startDate;\n    return null;\n  }\n\n  checkEndDate(control: FormControl): { [s: string]: boolean} {\n    if ( this.newCoupon.startDate !== null && control.value < this.newCoupon.startDate) {\n      return {'EndDateMustBeGreaterThanStartDate': true};\n    }\n    // this.newCoupon.endDate = this.newCoupon.endDate;\n    return null;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <p-fieldset [legend]=\\\"caption\\\">\\n    <form>\\n       <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"\\\"  type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"requestedCompany.id\\\" pInputText>\\n                <label for=\\\"id\\\">Company Id</label>\\n            </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"compName\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"compName\\\" [(ngModel)]=\\\"requestedCompany.compName\\\" disabled=\\\"true\\\"  pInputText>\\n                <label for=\\\"compName\\\">Name</label>\\n            </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"password\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"requestedCompany.password\\\" disabled=\\\"true\\\" pInputText>\\n                <label for=\\\"password\\\">Password</label>\\n            </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n          <span class=\\\"ui-float-label\\\">\\n              <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"requestedCompany.email\\\" disabled=\\\"true\\\" pInputText>\\n              <label for=\\\"email\\\">Email</label>\\n          </span>\\n        </div>\\n      <!-- <span ><button pButton type=\\\"submit\\\" class=\\\"ui-button-rounded\\\" label=\\\"Show\\\" (click)=\\\"getCompanyInfo()\\\"></button></span> -->\\n    </form>\\n    </p-fieldset>\\n  </div>\\n\"","import { MessageService } from 'primeng/api';\nimport { Company } from './../common/Company';\nimport { WebApiCompanyService } from './../../services/web-api-company.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-get-company-info',\n  templateUrl: './get-company-info.component.html',\n  styleUrls: ['./get-company-info.component.css']\n})\nexport class GetCompanyInfoComponent implements OnInit {\n\n  requestedCompany: Company = new Company(null, '', '', '');\n  caption = 'Company Information';\n\n  /*\n  At the constructor we inject\n  1. WebApiAdminService for the favor of the services\n  2. MessageService for the favor of the custom messages\n  */\n  constructor(private companyService: WebApiCompanyService, private messageService: MessageService) {\n    this.getCompanyInfo();\n  }\n\n  // This method is activated from the constructor every time the user rout to compny info link\n  public getCompanyInfo() {\n    this.companyService.getCompanyInfo().subscribe(\n      (resp) => {\n        this.requestedCompany = resp.json();\n      },\n      (error) => {\n        this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: error._body});\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <p-fieldset [legend]=\\\"caption\\\">\\n      <!-- <form [formGroup]=\\\"showCompanyForm\\\"> -->\\n      <form>\\n          <div class=\\\"form-group\\\" *ngIf=\\\"requestedCoupon.image && requestedCoupon.id\\\" style=\\\"text-align:center\\\">\\n              <!-- <span class=\\\"ui-float-label\\\">\\n                  <input id=\\\"image\\\" type=\\\"image\\\" class=\\\"form-control\\\" name=\\\"image\\\" [(ngModel)]=\\\"requestedCoupon.image\\\" disabled=\\\"true\\\" pInputText>\\n                  <label for=\\\"image\\\">Image</label>\\n              </span> -->\\n              <img id=\\\"img\\\" [src]=\\\"requestedCoupon.image\\\" width=\\\"120\\\" height=\\\"90\\\">\\n          </div>\\n       <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"\\\"  type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"requestedCoupon.id\\\" pInputText>\\n                <label for=\\\"id\\\">Company Id</label>\\n            </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" [ngModel]=\\\"requestedCoupon.title\\\" disabled=\\\"true\\\"  pInputText>\\n                <label for=\\\"title\\\">Title</label>\\n            </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"startDate\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"startDate\\\" [ngModel]=\\\"requestedCoupon.startDate|date:'dd/MM/yyyy'\\\" disabled=\\\"true\\\" pInputText>\\n                <label for=\\\"startDate\\\">Start Date</label>\\n            </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"endDate\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"endDate\\\" [ngModel]=\\\"requestedCoupon.endDate|date:'dd/MM/yyyy'\\\" disabled=\\\"true\\\" pInputText>\\n                <label for=\\\"endDate\\\">End Date</label>\\n            </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n          <span class=\\\"ui-float-label\\\">\\n              <input id=\\\"amount\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [ngModel]=\\\"requestedCoupon.amount\\\" disabled=\\\"true\\\" pInputText>\\n              <label for=\\\"amount\\\">Amount</label>\\n          </span>\\n        </div><br>\\n        <div class=\\\"form-group\\\">\\n            <span class=\\\"ui-float-label\\\">\\n                <input id=\\\"type\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"type\\\" [ngModel]=\\\"requestedCoupon.type\\\" disabled=\\\"true\\\" pInputText>\\n                <label for=\\\"type\\\">Type</label>\\n            </span>\\n          </div><br>\\n          <div class=\\\"form-group\\\">\\n              <span class=\\\"ui-float-label\\\">\\n                  <input id=\\\"message\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"message\\\" [ngModel]=\\\"requestedCoupon.message\\\" disabled=\\\"true\\\" pInputText>\\n                  <label for=\\\"message\\\">Message</label>\\n              </span>\\n          </div><br>\\n          <div class=\\\"form-group\\\">\\n              <span class=\\\"ui-float-label\\\">\\n                  <input id=\\\"price\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"price\\\" [ngModel]=\\\"requestedCoupon.price\\\" disabled=\\\"true\\\" pInputText>\\n                  <label for=\\\"price\\\">Price</label>\\n              </span>\\n          </div><br>\\n          <br>\\n      <span ><button [disabled]=\\\"!requestedCoupon.id\\\" pButton type=\\\"submit\\\" class=\\\"ui-button-rounded\\\" label=\\\"Show\\\"\\n        (click)=\\\"getCoupon(requestedCoupon.id)\\\"></button></span>\\n    </form>\\n    </p-fieldset>\\n  </div>\\n\"","import { WebApiCompanyService } from './../../services/web-api-company.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { Coupon } from '../common/Coupon';\n// import { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-get-coupon-by-id',\n  templateUrl: './get-coupon-by-id.component.html',\n  styleUrls: ['./get-coupon-by-id.component.css']\n})\nexport class GetCouponByIdComponent implements OnInit {\n\n  requestedCoupon: Coupon = new Coupon(null, '', null, null, null, '', '', null, '');\n  caption = 'Coupon Information';\n  /*\n  At the constructor we inject\n  1. WebApiAdminService for the favor of the services\n  2. MessageService for the favor of the custom messages\n  */\n  constructor(private companyService: WebApiCompanyService, private messageService: MessageService) {\n\n  }\n\n  // This method is activated once the user enter the coupon id and press the show button\n  public getCoupon() {\n    this.companyService.getCouponByIdService(this.requestedCoupon.id).subscribe(\n      (resp) => {\n        this.requestedCoupon = resp.json();\n      },\n      (error) => {\n        this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: error._body});\n      });\n  }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" >\\n    <!-- <div *ngIf=\\\"hasData===true\\\"> -->\\n  <div class=\\\"container right\\\">\\n    <div class=\\\"col-md-9\\\"></div>\\n    <div class=\\\"col-md-3\\\">\\n        <p-calendar  [showIcon]=\\\"true\\\" [showButtonBar]=\\\"true\\\" dateFormat=\\\"dd/mm/yy\\\"  [(ngModel)]=\\\"date\\\" (onSelect)=\\\"onSelectDate($event)\\\"></p-calendar>\\n      </div>\\n  <!-- <strong>Select date a Date:</strong> &nbsp; -->\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"ui-g-12 ui-md-12\\\">\\n  <p-fieldset [legend]=\\\"caption\\\">\\n      <p-table [columns]=\\\"cols\\\" [value]=\\\"coupons\\\" selectionMode=\\\"single\\\" [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [resizableColumns]=\\\"true\\\">\\n       <ng-template pTemplate=\\\"caption\\\">\\n           {{ numOfCoupons }} Listed Coupons\\n         </ng-template>\\n       <ng-template pTemplate=\\\"header\\\">\\n           <tr>\\n               <th *ngFor=\\\"let col of cols\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn>\\n               {{ col.displayName }}\\n               <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\n               </th>\\n           </tr>\\n       </ng-template>\\n       <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n           <tr [pSelectableRow]=\\\"rowData\\\">\\n               <td *ngFor=\\\"let col of columns\\\">\\n                  <span *ngIf=\\\"col.field!=='startDate' && col.field!=='endDate'\\\" >{{rowData[col.field]}}</span>\\n                  <span *ngIf=\\\"col.field==='startDate' || col.field==='endDate'\\\" >{{rowData[col.field]|date:'dd/MM/yyyy'}}</span>\\n               </td>\\n           </tr>\\n       </ng-template>\\n     </p-table>\\n    </p-fieldset>\\n</div>\\n</div>\\n</div>\\n<!-- </div> -->\\n<!-- <div *ngIf=\\\"hasData!==true\\\">\\n    <div class=\\\"alert alert-info\\\" style=\\\"text-align: center\\\">\\n        <strong>There aren't any coupons in the system</strong>\\n      </div>\\n</div> -->\\n\"","import { MessageService } from 'primeng/api';\nimport { WebApiCompanyService } from './../../services/web-api-company.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Coupon } from '../common/Coupon';\n\n@Component({\n  selector: 'app-get-coupons-by-date',\n  templateUrl: './get-coupons-by-date.component.html',\n  styleUrls: ['./get-coupons-by-date.component.css']\n})\nexport class GetCouponsByDateComponent implements OnInit {\n\n  coupons: Coupon[] = [];\n  cols: any[];\n  numOfCoupons: number;\n  caption = 'Coupons By Date';\n  date: Date;\n  hasData = false;\n  // defaultDate: string;\n\n  /*\n  At the constructor we inject\n  1. WebApiAdminService for the favor of the services\n  2. MessageService for the favor of the custom messages\n  */\n  constructor(private companyService: WebApiCompanyService, private messageService: MessageService) {\n    this.cols = companyService.couponCols;\n  }\n\n  ngOnInit() {\n  }\n\n  // This method is activated (by event) every time the user select a date.\n  // It activate the getCouponByDateService service that presnet the relevant data to the user\n  onSelectDate(event) {\n   this.companyService.getCouponByDateService(this.date.getFullYear() + '-' + (this.date.getMonth() + 1)  + '-' + this.date.getDate())\n    .subscribe (\n      (resp) => {\n          this.hasData = true;\n          this.coupons = resp.json();\n          this.numOfCoupons = this.coupons.length;\n          this.coupons.sort((a: any, b: any) => {\n            if (a.title < b.title) {\n              return -1;\n            } else if (a.title > b.title) {\n              return 1;\n            } else {\n              return 0;\n            }\n        });\n      },\n      (error) => {\n        // this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: error._body});\n        this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: 'There aren\\'t any listed coupons '\n         + 'with an end date less than ' +  this.date.getFullYear() + '-' + (this.date.getMonth() + 1)  + '-'\n         + this.date.getDate()  + ' in the system '});\n        });\n  }\n\n}\n","module.exports = \".startyear,\\r\\n.endyear {\\r\\n\\tfloat: left;\\r\\n\\twidth: 10vw;\\r\\n\\tcolor: #333;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight: bold;\\r\\n}\\r\\n.endyear {\\r\\n\\ttext-align: left;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- <h4 class=\\\"first\\\">Price: {{ price }}</h4> -->\\n  <!-- <span class=\\\"startyear\\\">{{minPrice}}</span>\\n  <p-slider id=\\\"priceSlider\\\" (onSlideEnd)=\\\"onPriceChange($event)\\\" [(ngModel)]=\\\"price\\\" [min]=\\\"minPrice\\\" [max]=\\\"maxPrice\\\" ></p-slider>\\n  <span class=\\\"endyear\\\">{{maxPrice}}</span> -->\\n  <!-- <div class=\\\"row\\\">\\n    <div class=\\\"col-md-1\\\">\\n        {{minPrice}}\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n        <p-slider id=\\\"priceSlider\\\" (onSlideEnd)=\\\"onPriceChange($event)\\\" [(ngModel)]=\\\"price\\\" [min]=\\\"minPrice\\\" [max]=\\\"maxPrice\\\" ></p-slider>\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n        {{maxPrice}}\\n    </div>\\n  </div> -->\\n<div *ngIf=\\\"hasData===true\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"ui-g-12 ui-md-1\\\">\\n          <b class=\\\"pull-right\\\"><i> Min Price {{minPrice}} </i></b>\\n        </div>\\n       <div class=\\\"ui-g-12 ui-md-10\\\" style=\\\"margin-top:25px;\\\">\\n                <p-slider   (onSlideEnd)=\\\"onPriceChange($event)\\\" [(ngModel)]=\\\"price\\\"  [min]=\\\"minPrice\\\" [max]=\\\"maxPrice\\\" [animate]=\\\"true\\\">\\n                </p-slider>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-1\\\">\\n            <b class=\\\"pull-left\\\"><i>Max Price {{maxPrice}} </i></b>\\n  </div>\\n</div>\\n<hr>\\n</div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"ui-g-12 ui-md-12\\\">\\n  <p-fieldset [legend]=\\\"caption\\\">\\n    <p-table [columns]=\\\"cols\\\"  [value]=\\\"coupons\\\" selectionMode=\\\"single\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [resizableColumns]=\\\"true\\\">\\n      <ng-template pTemplate=\\\"caption\\\">\\n        {{ numOfCoupons }} Listed Coupons\\n      </ng-template>\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th *ngFor=\\\"let col of cols\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn>\\n            {{ col.displayName }}\\n            <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\n          </th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n        <tr [pSelectableRow]=\\\"rowData\\\">\\n          <td *ngFor=\\\"let col of columns\\\">\\n              <span *ngIf=\\\"col.field!=='startDate' && col.field!=='endDate'\\\" >{{rowData[col.field]}}</span>\\n              <span *ngIf=\\\"col.field==='startDate' || col.field==='endDate'\\\" >{{rowData[col.field]|date:'dd/MM/yyyy'}}</span>\\n          </td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n  </p-fieldset>\\n</div>\\n</div>\\n</div>\\n\\n<!-- <div *ngIf=\\\"hasData!==true\\\">\\n    <div class=\\\"alert alert-info\\\" style=\\\"text-align: center\\\">\\n        <strong>There aren't any coupons in the system</strong>\\n      </div>\\n</div> -->\\n\"","import { MessageService } from 'primeng/api';\nimport { WebApiCompanyService } from './../../services/web-api-company.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Coupon } from '../common/Coupon';\n// import * as $ from 'jquery';\n\n\n@Component({\n  selector: 'app-get-coupons-by-price',\n  templateUrl: './get-coupons-by-price.component.html',\n  styleUrls: ['./get-coupons-by-price.component.css']\n})\nexport class GetCouponsByPriceComponent implements OnInit {\n\n  price: number;\n  coupons: Coupon[] = [];\n  couponsForPrices: Coupon[] = [];\n  cols: any[];\n  numOfCoupons: number;\n  caption = 'Coupons By Price';\n  minPrice: number;\n  maxPrice: number;\n  hasData = false;\n\n  /*\n  At the constructor we inject\n  1. WebApiAdminService for the favor of the services\n  2. MessageService for the favor of the custom messages\n  */\n  constructor(private companyService: WebApiCompanyService, private messageService: MessageService ) {\n    // this.hasData = companyService.hasData;\n    this.cols = companyService.couponCols;\n  }\n\n  ngOnInit() {\n    // this.cols = [\n    //   { displayName: 'Id',          field: 'id',          type: 'number' ,  disabled: 'true' ,  tag: 'input'},\n    //   { displayName: 'Title',       field: 'title',       type: 'text' ,    disabled: 'true' ,  tag: 'input'},\n    //   { displayName: 'Start Date',  field: 'startDate',   type: 'date' ,    disabled: 'true' ,  tag: 'cal'},\n    //   { displayName: 'End Date',    field: 'endDate',     type: 'date' ,    disabled: 'false',  tag: 'cal'},\n    //   { displayName: 'Amount',      field: 'amount',      type: 'number' ,  disabled: 'true' ,  tag: 'input'},\n    //   { displayName: 'Type',        field: 'type',        type: 'text' ,    disabled: 'true' ,  tag: 'list'},\n    //   { displayName: 'Message',     field: 'message' ,    type: 'text' ,    disabled: 'true' ,  tag: 'input'},\n    //   { displayName: 'Price',       field: 'price' ,      type: 'number',   disabled: 'false',  tag: 'input'},\n    //   { displayName: 'Image',       field: 'image' ,      type: 'text',     disabled: 'true' ,  tag: 'input'}\n    // ];\n\n    // This methos populate the min price and the max price for the favor of the slider boundaries\n    this.getMinMaxPrices();\n\n}\n\n  // This method is activated (by event) every time the user changes the price.\n  // It activate the getCouponByPriceService service that presnet the relevant data to the user\n  onPriceChange(event) {\n    this.companyService.getCouponByPriceService(event.value).subscribe (\n      (resp) => {\n        this.coupons = resp.json();\n        this.numOfCoupons = this.coupons.length;\n        this.coupons.sort((a: any, b: any) => {\n          if (a.title < b.title) {\n            return -1;\n          } else if (a.title > b.title) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      },\n      (error) => {\n        console.log(error._body);\n        this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: error._body});\n      }\n    );\n  }\n\n  // This method is activated from the ngOnInit and it responsible\n  // to populate the min price and the max price for the favor of the slider boundaries\n  private getMinMaxPrices() {\n      this.companyService.getAllCouponsService().subscribe (\n        (resp) => {\n          this.couponsForPrices = resp.json();\n          this.couponsForPrices.sort((a: any, b: any) => {\n            if (a.price < b.price) {\n              return -1;\n            } else if (a.price > b.price) {\n              return 1;\n            } else {\n              return 0;\n            }\n          });\n      this.minPrice = this.couponsForPrices[0].price;\n      this.maxPrice = this.couponsForPrices[this.couponsForPrices.length - 1].price;\n      this.price = this.maxPrice;\n      this.initializeView(this.price);\n     });\n  }\n\n// This method initialize the screen with all the coupons from the higher price to te lower price\nprivate initializeView(price: number) {\n  this.companyService.getCouponByPriceService(price).subscribe (\n    (resp) => {\n      this.hasData = true;\n      this.coupons = resp.json();\n      this.numOfCoupons = this.coupons.length;\n      this.coupons.sort((a: any, b: any) => {\n        if (a.title < b.title) {\n          return -1;\n        } else if (a.title > b.title) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n    },\n    (error) => {\n      console.log(error._body);\n      this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: error._body});\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <div *ngIf=\\\"hasData!==true\\\">\\n    <div class=\\\"alert alert-info\\\" style=\\\"text-align: center\\\">\\n        <strong>There aren't any coupons in the system</strong>\\n      </div>\\n</div> -->\\n<div class=\\\"container\\\" >\\n    <div class=\\\"container\\\">\\n      <div class=\\\"col-md-10\\\">\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n          <p-dropdown id=\\\"type\\\" [options]=\\\"types\\\" name=\\\"type\\\" [autoDisplayFirst]=\\\"false\\\" [showClear]=\\\"true\\\" (onChange)=\\\"onTypeChange($event)\\\"\\n          placeholder=\\\"Select a Type\\\"\\n          ></p-dropdown>\\n        </div>\\n    <!-- <strong>Select date a Date:</strong> &nbsp; -->\\n  </div>\\n  <!-- <div *ngIf=\\\"hasData===true\\\"> -->\\n  <div class=\\\"row\\\">\\n      <div class=\\\"ui-g-12 ui-md-12\\\">\\n    <p-fieldset [legend]=\\\"caption\\\">\\n        <p-table [columns]=\\\"cols\\\" [value]=\\\"coupons\\\" selectionMode=\\\"single\\\" [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [resizableColumns]=\\\"true\\\">\\n         <ng-template pTemplate=\\\"caption\\\">\\n             {{ numOfCoupons }} Listed Coupons\\n           </ng-template>\\n         <ng-template pTemplate=\\\"header\\\">\\n             <tr>\\n                 <th *ngFor=\\\"let col of cols\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn>\\n                 {{ col.displayName }}\\n                 <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\n                 </th>\\n             </tr>\\n         </ng-template>\\n         <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n             <tr [pSelectableRow]=\\\"rowData\\\">\\n                 <td *ngFor=\\\"let col of columns\\\">\\n                     {{rowData[col.field]}}\\n                 </td>\\n             </tr>\\n         </ng-template>\\n       </p-table>\\n      </p-fieldset>\\n  </div>\\n</div>\\n</div>\\n<!-- </div> -->\\n\"","import { MessageService } from 'primeng/api';\nimport { Component, OnInit } from '@angular/core';\nimport { WebApiCompanyService } from 'src/app/services/web-api-company.service';\nimport { Coupon } from '../common/Coupon';\n\n@Component({\n  selector: 'app-get-coupons-by-type',\n  templateUrl: './get-coupons-by-type.component.html',\n  styleUrls: ['./get-coupons-by-type.component.css']\n})\nexport class GetCouponsByTypeComponent implements OnInit {\n\n  coupons: Coupon[] = [];\n  cols: any[];\n  types: any[];\n  numOfCoupons: number;\n  caption = 'Coupons By Type';\n  hasData = false;\n\n  /*\n  At the constructor we inject\n  1. WebApiAdminService for the favor of the services\n  2. MessageService for the favor of the custom messages\n  */\n  constructor(private companyService: WebApiCompanyService, private messageService: MessageService ) {\n\n    // this.hasData = companyService.hasData;\n    this.cols = companyService.couponCols;\n    this.types = companyService.couponTypes;\n\n    // this.types = [\n    //   {label: 'Resturant' , value: 'RESTURANT'},\n    //   {label: 'Electricity', value: 'ELECTRICITY'},\n    //   {label: 'Food', value: 'FOOD'},\n    //   {label: 'Health', value: 'HEALTH'},\n    //   {label: 'Sports', value: 'SPORTS'},\n    //   {label: 'Camping', value: 'CAMPING'},\n    //   {label: 'Travelling', value: 'TRAVELLING'},\n    // ];\n\n  }\n\n  ngOnInit() {\n    // this.cols = [\n    //   { displayName: 'Id',          field: 'id'         },\n    //   { displayName: 'Title',       field: 'title'      },\n    //   { displayName: 'Start Date',  field: 'startDate'  },\n    //   { displayName: 'End Date',    field: 'endDate'    },\n    //   { displayName: 'Amount',      field: 'amount'     },\n    //   { displayName: 'Type',        field: 'type'       },\n    //   { displayName: 'Message',     field: 'message'    },\n    //   { displayName: 'Price',       field: 'price'      },\n    //   { displayName: 'Image',       field: 'image'      }\n    // ];\n  }\n\n  // This method is activated (by event) every time the user changes the coupon type.\n  // It activate the getCouponByTypeService service that presnet the relevant data to the user\n  onTypeChange(event) {\n    if ( event.value !== null) {\n      this.companyService.getCouponByTypeService(event.value).subscribe (\n        (resp) => {\n          this.hasData = true;\n          this.coupons = resp.json();\n          this.numOfCoupons = this.coupons.length;\n          this.coupons.sort((a: any, b: any) => {\n            if (a.title < b.title) {\n              return -1;\n            } else if (a.title > b.title) {\n              return 1;\n            } else {\n              return 0;\n            }\n          });\n        },\n        (error) => {\n          this.messageService.add({severity: 'error', summary: 'Data Unavailable', detail: error._body});\n        });\n  } else {\n    this.coupons = [];\n  }\n}\n}\n","module.exports = \".navbar-brand {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  text-align: center;\\r\\n  margin: auto;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <div class=\\\"navbar-brand\\\">CouponSystem</div>\\n    </div>\\n      <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\n          <ul class=\\\"nav navbar-nav navbar-left\\\">\\n              <li>\\n                  <p-menu [showTransitionOptions]=\\\"'0ms'\\\" [hideTransitionOptions]=\\\"'0ms'\\\" #menu [popup]=\\\"true\\\" [model]=\\\"items\\\"></p-menu>\\n                  <a class=\\\"glyphicon glyphicon-list\\\"  label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"></a>\\n              </li>\\n          </ul>\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\n              <li><a><span class=\\\"glyphicon glyphicon-user\\\"></span> Hello {{ company.compName }}</a></li>\\n              <li><a (click)=\\\"logout()\\\"><span class=\\\"glyphicon glyphicon-off\\\"></span> Log Out</a></li>\\n          </ul>\\n      </div>\\n  </div>\\n</nav>\\n\\n\"","import { Company } from './../common/Company';\nimport { Component, OnInit } from '@angular/core';\nimport { MenuItem, MessageService } from 'primeng/primeng';\nimport { WebApiCompanyService } from './../../services/web-api-company.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  items: MenuItem[];\n  company:  Company = new Company(null, '', '', '');\n  request: Request;\n  response: Response;\n  prefixLogOutUrl: string;\n\n\n\n  constructor(private companyService: WebApiCompanyService,  private messageService: MessageService) {\n    this.getCompanyInfo();\n    this.prefixLogOutUrl = companyService.prefixLogOutUrl;\n\n  }\n\n  ngOnInit() {\n    this.items = [\n    {\n      label: 'Coupon',\n      items: [\n          {label: 'Home',        icon: 'pi pi-fw pi-home',     routerLink:   '/allCoupons'         },\n          {label: 'Coupon {Id}',      icon: 'pi pi-fw pi-file',     routerLink:   '/getCoupon'          },\n          {label: 'Add {Single}',     icon: 'pi pi-fw pi-plus',     routerLink:   '/addCoupon'          },\n          {label: 'Coupons {Price}',  icon: 'pi pi-fw pi-dollar',   routerLink:   '/getCouponsByPrice'  },\n          {label: 'Coupons {Date}',   icon: 'pi pi-fw pi-calendar', routerLink:   '/getCouponsByDate'   },\n          {label: 'Coupons {Type}',   icon: 'pi pi-fw pi-th-large', routerLink:   '/getCouponsByType'   }\n        ]\n      },\n      {\n        label: 'Company',\n        items: [\n            {label: 'Company Info',  icon: 'pi pi-fw pi-info', routerLink: '/companyInfo'}\n        ]\n      }\n    ];\n  }\n\n  public getCompanyInfo() {\n    this.companyService.getCompanyInfo().subscribe(\n      (resp) => {\n        this.company = resp.json();\n      });\n  }\n\n  public logout() {\n    this.companyService.logOutService(this.request, this.response).subscribe(\n      (resp) => {\n        this.messageService.add({severity: 'success', summary: 'LogOut', detail: 'You Were Logged Out Successfully'});\n        window.location.href = this.prefixLogOutUrl;\n      },\n      (error) => {\n        this.messageService.add({severity: 'success', summary: 'LogOut', detail: 'Logged Out Failed'});\n      });\n  }\n\n}\n","import { Coupon } from './../components/common/Coupon';\nimport { Http, RequestOptions } from '@angular/http';\nimport { Injectable } from '@angular/core';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebApiCompanyService {\n\n\n  // hasData: boolean;\n  couponCols: any[];\n  couponTypes: any[];\n  prefixCompanyUrl = 'http://localhost:8080/company/';\n  prefixLogOutUrl = 'http://localhost:8080/';\n\n  constructor( private http: Http ) {\n    // this.hasData = false;\n\n    this.couponCols = [\n      { displayName: 'Id',          field: 'id',          type: 'number' ,  disabled: 'true' ,  tag: 'input'},\n      { displayName: 'Title',       field: 'title',       type: 'text' ,    disabled: 'true' ,  tag: 'input'},\n      { displayName: 'Start Date',  field: 'startDate',   type: 'date' ,    disabled: 'true' ,  tag: 'cal'},\n      { displayName: 'End Date',    field: 'endDate',     type: 'date' ,    disabled: 'false',  tag: 'cal'},\n      { displayName: 'Amount',      field: 'amount',      type: 'number' ,  disabled: 'true' ,  tag: 'input'},\n      { displayName: 'Type',        field: 'type',        type: 'text' ,    disabled: 'true' ,  tag: 'list'},\n      { displayName: 'Message',     field: 'message' ,    type: 'text' ,    disabled: 'true' ,  tag: 'input'},\n      { displayName: 'Price',       field: 'price' ,      type: 'number',   disabled: 'false',  tag: 'input'},\n      { displayName: 'Image',       field: 'image' ,      type: 'text',     disabled: 'true' ,  tag: 'input'}\n    ];\n\n    this.couponTypes = [\n      {label: 'Resturant' , value: 'RESTURANT'},\n      {label: 'Electricity', value: 'ELECTRICITY'},\n      {label: 'Food', value: 'FOOD'},\n      {label: 'Health', value: 'HEALTH'},\n      {label: 'Sports', value: 'SPORTS'},\n      {label: 'Camping', value: 'CAMPING'},\n      {label: 'Travelling', value: 'TRAVELLING'},\n    ];\n  }\n\n  /**********************************************************************************/\n  /*********************Services for all the company methods*************************/\n  /**********************************************************************************/\n\n  // Get all the coupons from the DB\n  public getAllCouponsService() {\n    // return this.http.get('http://localhost:8080/company/get-all-coupons');\n    return this.http.get(this.prefixCompanyUrl + 'get-all-coupons');\n  }\n\n  // Add new company to the DB\n  public addNewCouponService(coupon: Coupon) {\n    // return this.http.post('http://localhost:8080/company/create-coupon/', coupon);\n    return this.http.post(this.prefixCompanyUrl + 'create-coupon/', coupon);\n  }\n\n  // Delete a company to the DB\n  public deleteCouponService(coupon: Coupon) {\n    const options = new RequestOptions({\n      body: coupon\n    });\n    // return this.http.delete ('http://localhost:8080/company/remove-coupon/' + coupon.id, options);\n    return this.http.delete (this.prefixCompanyUrl + 'remove-coupon/' + coupon.id, options);\n  }\n\n  public updateCouponService(coupon: Coupon) {\n    // return this.http.put ('http://localhost:8080/company/update-coupon/' + coupon.id, coupon);\n    return this.http.put (this.prefixCompanyUrl + 'update-coupon/' + coupon.id, coupon);\n  }\n\n  public getCouponByIdService(id: number) {\n    // return this.http.get('http://localhost:8080/company/get-coupon/' + id);\n    return this.http.get(this.prefixCompanyUrl + 'get-coupon/' + id);\n  }\n\n  public getCompanyInfo() {\n    // return this.http.get('http://localhost:8080/company/company-info');\n    return this.http.get(this.prefixCompanyUrl + 'company-info');\n  }\n\n  public getCouponByPriceService(price: number) {\n    // return this.http.get('http://localhost:8080/company/coupon-by-price?price=' + price);\n    return this.http.get(this.prefixCompanyUrl + 'coupon-by-price?price=' + price);\n  }\n\n  public getCouponByDateService(date: string) {\n    // return this.http.get('http://localhost:8080/company/coupon-by-date?date=' + date);\n    return this.http.get(this.prefixCompanyUrl + 'coupon-by-date?date=' + date);\n  }\n\n  public getCouponByTypeService(type: string) {\n    // return this.http.get('http://localhost:8080/company/coupon-by-type?type=' + type);\n    return this.http.get(this.prefixCompanyUrl + 'coupon-by-type?type=' + type);\n  }\n\n  /**********************************************************************************/\n  /*********************Services for the logout method*******************************/\n  /**********************************************************************************/\n  public logOutService(request, response) {\n    return this.http.post(this.prefixLogOutUrl + 'logout', request, response);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}